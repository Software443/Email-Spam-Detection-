# 1. Functional Requirements
# These define what the app should do:

# Accept user input (email or SMS text).

# Preprocess and transform the input text.

# Load and use a trained ML model to classify as "Spam" or "Not Spam".

# Display the prediction result with visual feedback.


# 2. Technical Requirements
# ðŸ”¹ Programming Language & Tools
# Python 3.7+

# Streamlit (for the web UI)

# Scikit-learn (for ML model)

# Pandas & NumPy (data handling)

# NLTK or spaCy (for text preprocessing)

# Pickle/Joblib (to load saved model/vectorizer)

# ðŸ”¹ Required Python Libraries
# Install via pip
# - streamlit
# - scikit-learn
# - pandas
# - numpy

# If using TF-IDF or CountVectorizer:
# pip install Pickle

# 3. Machine Learning Components
# You should already have:

# i. A labeled dataset (spam vs. ham)

# ii. Preprocessing pipeline (cleaning, tokenization, etc.)

# iii. A trained model (e.g., Naive Bayes, Logistic Regression)

# iv. A saved vectorizer (e.g., TfidfVectorizer) and model using pickle or joblib

# Saving model & vectorizer
import pickle

with open('vectorizer.pkl', 'wb') as f:
    pickle.dump(vectorizer, f)

with open('model.pkl', 'wb') as f:
    pickle.dump(model, f)


ðŸ§ª 4. Sample Folder Structure
spam-detector-app/
â”‚
â”œâ”€â”€ spam_app.py               # Streamlit frontend
â”œâ”€â”€ Logistic_model.pkl        # Trained ML model
â”œâ”€â”€ cv_model.pkl              # Saved TfidfVectorizer
â”œâ”€â”€ requirements.txt          # List of packages
â”œâ”€â”€ spam Dectection.ipynb     # For preprocessing


